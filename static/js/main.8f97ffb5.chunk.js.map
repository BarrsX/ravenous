{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","registerServiceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","i","key","id","SearchBar","sortByOptions","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8f97ffb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt={this.props.business.name}/>\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state}, {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n                        <p>{this.props.business.reviewCount} reviews</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport Business from '../Business/Business';\r\nimport './BusinessList.css';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map(function(business, i) {\r\n                        return <Business key={business.id} business={business} />;\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    sortByOptions = {\r\n        'Best Match': 'best_match',\r\n        'Highest Rated': 'rating',\r\n        'Most Reviewed': 'review_count'\r\n    };\r\n\r\n    getSortByClass(sortByOption) {\r\n        if(this.state.sortBy === sortByOption) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    // Handle State Changes\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({\r\n            sortBy: sortByOption\r\n        });\r\n    }\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value\r\n        });\r\n    }\r\n    handleLocationChange(event) {\r\n        this.setState({\r\n            location: event.target.value\r\n        });\r\n    }\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (\r\n                <li\r\n                    className={this.getSortByClass(sortByOptionValue)}\r\n                    key={sortByOptionValue}\r\n                    onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n                        {sortByOption}\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Let's Go</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","const apiKey = 'Asq_VxuCrf65QIu2D7u0jn8WYCdpcG6FnVzZ-tqaqBaAuVdqsYSRS7eDk9oCOXTo0_drrskKyj3l85HkzD2yp8Va95Ex4SDu1sbD5618saKwBtfntULoKwsmyU7RX3Yx'\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => {\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './util/Yelp';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'businesses': []\n    }\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        'businesses': businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}