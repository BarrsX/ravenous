{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","registerServiceWorker.js","index.js"],"names":["Business","React","Component","constructor","super","this","state","link","componentDidMount","getPlaceID","props","business","latitude","longitude","name","then","x","setState","lat","long","bizName","replace","fetch","response","json","status","candidates","place_id","placeId","render","createElement","className","src","imageSrc","alt","Link","underline","href","target","rel","address","city","zipCode","category","rating","reviewCount","BusinessList","isLoading","searchPerformed","businesses","length","map","key","id","SearchBar","sortByOptions","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","reverseGeocode","error","console","data","results","address_components","find","component","types","includes","location","long_name","catch","term","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","getSortByClass","sortByOption","handleSortByChange","event","value","preventDefault","searchYelp","renderSortByOptions","Object","keys","sortByOptionValue","onClick","onChange","placeholder","Yelp","search","headers","Authorization","jsonResponse","image_url","address1","zip_code","categories","title","review_count","coordinates","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0c38de6.chunk.js","sourcesContent":["import { Link } from '@mui/material';\nimport React from 'react';\n// import axios from 'axios';\nimport './Business.css';\n\n\nclass Business extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            link: ''\n        };\n    }\n\n    componentDidMount() {\n        this.getPlaceID(this.props.business.latitude, this.props.business.longitude, this.props.business.name)\n            .then(x => this.setState({\n                link: x\n            }));\n    }\n\n    getPlaceID(lat, long, name) {\n        let apiKey = 'AIzaSyAFjagYUP76eJQmoDDGze9TtHboIBpY_0s';\n        var bizName = name.replace(' ', '%20');\n\n        var searchString = `https://morning-stream-08762.herokuapp.com/https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=${bizName}&inputtype=textquery&locationbias=circle%3A2000%40${lat}%2C${long}&fields=place_id&key=${apiKey}`;\n\n        return fetch(searchString)\n            .then(response => response.json())\n            .then(json => {\n                if (json.status === 'OK') {\n                    return json.candidates[0].place_id;\n                }\n            })\n            .then(placeId => {\n                if (placeId) {\n                    return `https://www.google.com/maps/search/?api=1&query=Google&query_place_id=${placeId}`;\n                } else {\n                    return `https://maps.google.com?q=${this.props.business.latitude},${this.props.business.longitude}`\n                }\n            });\n    };\n    \n    render() {\n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} alt={this.props.business.name} />\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                        <Link underline='none' href={this.state.link} target='_blank' rel='noopener noreferrer'>\n                            <p>{this.props.business.address}</p>\n                            <p>{this.props.business.city}</p>\n                            <p>{this.props.business.state}, {this.props.business.zipCode}</p>\n                        </Link>\n                    </div>\n                    <div className=\"Business-reviews\">\n                        <h3>{this.props.business.category}</h3>\n                        <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n                        <p>{this.props.business.reviewCount} reviews</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Business;\n","import React from \"react\";\nimport Business from \"../Business/Business\";\nimport \"./BusinessList.css\";\nimport \"../../LoadingBar.css\";\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {this.props.isLoading ? (\n          <div className=\"LoadingBar\"></div>\n        ) : !this.props.searchPerformed ? (\n          <div className=\"BusinessList-empty\">\n            <p>\n              Please enter a type of food and location to get recommendations.\n            </p>\n          </div>\n        ) : this.props.businesses.length === 0 ? (\n          <div className=\"BusinessList-empty\">\n            <p>No businesses found. Please try another search.</p>\n          </div>\n        ) : (\n          this.props.businesses.map((business) => {\n            return <Business business={business} key={business.id} />;\n          })\n        )}\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;\n","import { Link } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: \"\",\r\n      location: \"\",\r\n      sortBy: \"best_match\",\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  sortByOptions = {\r\n    \"Best Match\": \"best_match\",\r\n    \"Highest Rated\": \"rating\",\r\n    \"Most Reviewed\": \"review_count\",\r\n  };\r\n\r\n  getSortByClass(sortByOption) {\r\n    if (this.state.sortBy === sortByOption) {\r\n      return \"active\";\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // Handle State Changes\r\n  handleSortByChange(sortByOption) {\r\n    this.setState(\r\n      {\r\n        sortBy: sortByOption,\r\n      },\r\n      () => {\r\n        this.handleSearch();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({\r\n      term: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleLocationChange(event) {\r\n    this.setState({\r\n      location: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSearch(event) {\r\n    if (event) event.preventDefault();\r\n    if (this.state.term && this.state.location) {\r\n      this.props.searchYelp(\r\n        this.state.term,\r\n        this.state.location,\r\n        this.state.sortBy\r\n      );\r\n    }\r\n  }\r\n\r\n  getUserLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          this.reverseGeocode(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting user location:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  };\r\n\r\n  reverseGeocode = (latitude, longitude) => {\r\n    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.results && data.results.length > 0) {\r\n          const zipCode = data.results[0].address_components.find((component) =>\r\n            component.types.includes(\"postal_code\")\r\n          );\r\n          if (zipCode) {\r\n            this.setState({ location: zipCode.long_name });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error reverse geocoding:\", error));\r\n  };\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map((sortByOption) => {\r\n      let sortByOptionValue = this.sortByOptions[sortByOption];\r\n      return (\r\n        <li\r\n          className={this.getSortByClass(sortByOptionValue)}\r\n          key={sortByOptionValue}\r\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\r\n        >\r\n          {sortByOption}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>{this.renderSortByOptions()}</ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <input\r\n            onChange={this.handleTermChange}\r\n            placeholder=\"Search Businesses\"\r\n          />\r\n          <input\r\n            onChange={this.handleLocationChange}\r\n            placeholder=\"Where?\"\r\n            value={this.state.location}\r\n          />\r\n          <button onClick={this.getUserLocation}>Use My Location</button>\r\n        </div>\r\n        <div className=\"SearchBar-submit\">\r\n          <Link underline=\"none\" onClick={this.handleSearch}>\r\n            Let's Go\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","const Yelp = {\r\n  search(term, location, sortBy) {\r\n    return fetch(\r\n      `https://morning-stream-08762.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}&limit=48`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(jsonResponse => {\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => {\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count,\r\n              longitude: business.coordinates.longitude,\r\n              latitude: business.coordinates.latitude\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport default Yelp;\r\n","import React from \"react\";\nimport BusinessList from \"./components/BusinessList/BusinessList\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Yelp from \"./util/Yelp\";\nimport \"./App.css\";\nimport \"./LoadingBar.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n      searchPerformed: false,\n      isLoading: false,\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    this.setState({ isLoading: true });\n    Yelp.search(term, location, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses,\n        searchPerformed: true,\n        isLoading: false,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList\n          businesses={this.state.businesses}\n          searchPerformed={this.state.searchPerformed}\n          isLoading={this.state.isLoading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}